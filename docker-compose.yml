services:
  api:
    container_name: easy_book_be
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8080"
    environment:
      - PORT=${PORT}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM=${SMTP_FROM}
      - APP_URL=${APP_URL}
      - WEB_URL=${WEB_URL}
    volumes:
      - .:/app
      - uploads:/app/uploads
    depends_on:
      - db
    networks:
      - easy_book_network

  adminer:
    image: adminer:4.8.1-standalone
    container_name: easy_book_adminer
    restart: always
    depends_on:
      - db
    networks:
      - easy_book_network

  db:
    image: postgres:15-alpine 
    container_name: easy_book_db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - easy_book_network

volumes:
  db_data:
  uploads:

networks:
  easy_book_network:
    driver: bridge
